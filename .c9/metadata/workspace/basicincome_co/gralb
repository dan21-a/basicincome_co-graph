{"filter":false,"title":"gralb","tooltip":"/basicincome_co/gralb","undoManager":{"mark":0,"position":0,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":2001,"column":5},"action":"insert","lines":["  module.controller('mainCtrl', ","    function ($scope, $network, $vaultClient, $MongoDB)","  {","      ","    $network.shout()","    console.log(\"hej\")","","","// CONSTANTS","var UNIX_RIPPLE_TIME = 946684800;","var RECURSION_DEPTH = 1;","var MAX_NUTL = 360;","var REFERENCE_NODE = 'rLaKjMvLbrAJwnH4VpawQ6ot9epZqJmbfQ';","var HALO_MARGIN = 6;","var COLOR_TABLE = {","//currency  |  center  |   rim  |","\t\"__Z\": [[\"#dfe0e1\",\"#999999\"], //degree 0","/*GRAY*/  [\"#ebecec\",\"#aaa9a9\"], //degree 1","          [\"#ededee\",\"#bcbbbb\"], //etc.","          [\"#f3f4f4\",\"#d0cece\"],","          [\"#fdfdfe\",\"#e5e4e3\"]],","\t\t\t","\t\"__N\": [[\"#f05656\",\"#ee2d2c\"],","/*RED*/\t  [\"#f37a6f\",\"#f16249\"],","          [\"#f6998b\",\"#f5886d\"],","          [\"#fab9ac\",\"#f9ad95\"],","          [\"#fddad1\",\"#fcd4c4\"]],","\t\t\t","\t\"BTC\": [[\"#e19e41\",\"#b76f2f\"],","/*ORANGE*/[\"#e5af65\",\"#c38a57\"],","          [\"#e9c189\",\"#d0a57e\"],","          [\"#edd2ad\",\"#dcbfa6\"],","          [\"#f1e4d1\",\"#e9dacd\"]],","\t\t\t","\t\"CNY\": [[\"#fcf5a1\",\"#fedb3d\"],","/*YELLOW*/[\"#fdf7b4\",\"#ffe069\"],","          [\"#fdf7c4\",\"#ffe68d\"],","          [\"#fefad8\",\"#ffed83\"],","          [\"#fffcea\",\"#fff5d6\"]],","\t\t\t","\t\"USD\": [[\"#99cc66\",\"#669940\"],","/*LIME*/  [\"#acd585\",\"#82a85d\"],","          [\"#c0dea1\",\"#9eb880\"],","          [\"#d4e8be\",\"#bbcba4\"],","          [\"#e8f2dd\",\"#dae1cd\"]],","\t\t\t","\t\"AUD\": [[\"#8dc198\",\"#609869\"],","/*GREEN*/ [\"#a2cbab\",\"#7eab85\"],","          [\"#b7d6bd\",\"#9cbda1\"],","          [\"#cbe0d0\",\"#b9d0bd\"],","          [\"#e0ebe2\",\"#d7e2d9\"]],","\t\t\t","\t\"XRP\": [[\"#55a7cc\",\"#346aa9\"],","/*BLUE*/  [\"#83b8d6\",\"#5083b9\"],","          [\"#a7cae1\",\"#7ba1cb\"],","          [\"#d0e1ed\",\"#a3c2dd\"],","          [\"#f2f6fa\",\"#cee8f1\"]],","\t\t\t","\t\"___\": [[\"#6566ae\",\"#363795\"], //I.e., any other currency.","/*INDIGO*/[\"#7e7cbb\",\"#5855a5\"],","          [\"#9896c9\",\"#7a74b6\"],","          [\"#b6b4da\",\"#9e99cb\"],","          [\"#d7d6eb\",\"#c9c6e3\"]],","\t\t\t","\t\"CAD\": [[\"#8e68ad\",\"#673695\"],","/*VIOLET*/[\"#9f80ba\",\"#7d58a5\"],","          [\"#8e68ad\",\"#673695\"],","          [\"#c8b8da\",\"#b29ecc\"],","          [\"#e0d8eb\",\"#d4cae4\"]],","\t\t\t","\t\"EUR\": [[\"#b76e99\",\"#863d66\"],","/*PINK*/  [\"#c389ab\",\"#9c6283\"],","          [\"#d0a4be\",\"#b2879f\"],","          [\"#dcbfd0\",\"#c9abbc\"],","          [\"#d9dae3\",\"#dfd0d8\"]]};","          ","var HIGH_SATURATION_COLORS = {","\t\"__N\": \"#f00\", //RED\t","\t\"BTC\": \"#fa0\", //ORANGE","\t\"CNY\": \"#af0\", //YELLOW","\t\"USD\": \"#0f0\", //LIME","\t\"AUD\": \"#0fa\", //GREEN","\t\"XRP\": \"#0af\", //BLUE","\t\"___\": \"#00f\", //INDIGO","\t\"CAD\": \"#a0f\", //VIOLET","\t\"EUR\": \"#f0a\"  //PINK","};","var HEX_TO_PERCENT = {\"0\":0,\"a\":0.67,\"f\":1};","","var REQUEST_REPETITION_INTERVAL = 8*1000; //milliseconds","","","","var param = window.location.hash.replace(/\\W/g, '');","","var alreadyFailed = false;","var focalNode;","var transaction_id;","","var changingFocus = false;","","if (param == \"\") {","\tfocalNode = REFERENCE_NODE;","} else if (param.charAt(0) == \"r\" ) {","\tfocalNode = param;","} else if (\"0123456789ABCDEF\".indexOf(param.charAt(0)) != -1) {","\ttransaction_id = param;","} else if (param.charAt(0) == \"u\" && Sha1.hash(param) == \"7d0b25cc0abdcc216e9f26b078c0cb5c9032ed8c\") {","\t//Easter egg!","\tRECURSION_DEPTH = 999999999;","\tfocalNode = REFERENCE_NODE;","} else {","\tfocalNode = REFERENCE_NODE;","}","","","function gotoThing() {","  var string = $('#focus').val().replace(/\\s+/g, '');","  if (string.length === 64) {","    console.log(\"HELLO!\");","    eraseGraph();","    window.location.hash = string;","    remote.request_tx(string, handleIndividualTransaction);","  } else {","    changeMode('individual');","    refocus(string,true);","  }","}","","","var lastFocalNode = REFERENCE_NODE;","var currentCurrency = \"XRP\";","var currentLedger = {ledger_current_index: 2011754};","var w = 935;  //Width","var h = 1085; //Height","var hh = 710; //Height above the bottom bar","","var nodes = [ {x:w/2, y:hh/2, account:{Account:focalNode, Balance:0}, trustLines:[], balances:{} }];","var le_links = [];","var nodeMap = {};","nodeMap[focalNode] = 0;","var degreeMap = {};","degreeMap[focalNode] = 0;","var expandedNodes = {};","var provisionallyExpandedNodes = {};","var txx;","var firstTime = true;","","","","","// Setup ripple-lib","  //  $network.remote()","","","//basicincome","// Setup vaultClient","//$vaultClient.vaultClient()","","//Opening sequence:","/*","remote.connect(function() {","\t//Subscriptions","\tremote.on('ledger_closed', function(x,y){","\t\tcurrentLedger = x;","\t\t$(\"#ledgernumber\").text(commas(parseInt(currentLedger.ledger_index)));","\t\tremote.request_ledger('closed', handleLedger);","\t});","\tremote.on('transaction_all', handleTransaction);","\t","\t//Get current ledger","\tremote.request_ledger('closed', handleLedger);","","\tif (firstTime) {","\t\tif (transaction_id && transaction_id!=\"\") {","\t\t\tnodeMap = {};","\t\t\tdegreeMap = {};","\t\t\tnodes = [];","      $('#focus').val(transaction_id);","\t\t\tremote.request_tx(transaction_id, handleIndividualTransaction);","\t\t} else {","\t\t\tlastFocalNode = REFERENCE_NODE;","\t\t\texpandNode(focalNode);","\t\t\taddNodes(0);","\t\t\tserverGetInfo(focalNode);","\t\t}","\t}","\tfirstTime = false;","});","*/","/*","var pendingRequests = {};","","var requestRepetitionInterval = setInterval(function(){","\tvar now = new Date().getTime();","\tvar idsToDelete = [];","\tvar entriesToAdd = {};","\tfor (var id in pendingRequests) {","\t\tif (pendingRequests.hasOwnProperty(id)) {","\t\t\tvar req = pendingRequests[id];","\t\t\tif (req.timestamp + REQUEST_REPETITION_INTERVAL <= now) {","\t\t\t\tconsole.log(\"Repeating request\");","\t\t\t\tvar newID = req.func();","\t\t\t\tentriesToAdd[newID] = {func: req.func, timestamp:now};","\t\t\t\tidsToDelete.push(id);","\t\t\t}","\t\t}","\t}","\tfor (var i=0; i<idsToDelete.length; i++) {","\t\tdelete pendingRequests[idsToDelete[i]];","\t}","\tfor (var newID in entriesToAdd) {","\t\tif (entriesToAdd.hasOwnProperty(newID)) {","\t\t\tpendingRequests[newID] = entriesToAdd[newID];","\t\t}","\t}","}, REQUEST_REPETITION_INTERVAL);","","*/","","//Repeatable methods for fetching from server","","function serverGetLines(address) {","\tif ($.isEmptyObject(nodes[nodeMap[address]].trustLines)) {","\t\t//Get trust lines for address         ?  ??current?","\t\tvar rral = (function() {return function() {","\t\t\tvar x = remote.request_account_lines(address, 0, 0, handleLines);","\t\t\treturn x.message.id;","\t\t}})();","\t\tvar reqID = rral();","\t\tpendingRequests[reqID] = {","\t\t\tfunc:rral,","\t\t\ttimestamp:(new Date().getTime())","\t\t}","\t\t","\t} else {","\t}","\t","\tfunction get_content(address){","// basicincome.co","$MongoDB.getpathways(address, filter_connections)","","","function filter_connections(data){","\tvar pathway = []",""," \tfor(var i =0; i<data.length; i++){"," \t\tpathway.push({\"account\": data[i].account, \"balance\": data[i].total_pathway, \"currency\": data[i].currency, \"limit\":\"0\",\"limit_peer\":\"0.25\",\"quality_in\":0,\"quality_out\":0, \"taxRate\": data[i].taxRate})",""," \t}","    addConnections(address, pathway);","","}","}","}","","function serverGetInfo(address) {","\t//console.log(\"serverGetInfo\", address);","\tif (nodes[nodeMap[address]] && nodes[nodeMap[address]].account.index) {","\t\t// Don't do anything if we already have information about this account.","\t\t// TODO: Why does this never happen?","\t} else {","\t\t//Get account info for address","\t\tvar rrai = (function() {return function() {","\t\t\tvar x = remote.request_account_info(address, handleAccountData);","\t\t\treturn x.message.id;","\t\t}})();","\t\tvar reqID = rrai();","\t\tpendingRequests[reqID] = {","\t\t\tfunc:rrai,","\t\t\ttimestamp:(new Date().getTime())","\t\t};","\t}","}","","var TRANSACTION_PAGE_LENGTH = 13;","","function getNextTransactionPage() {","\t//request transactions for the current account, with offset = nodes[nodeMap[address]].transactions.length","\tvar rrat = (function() {return function(){","\t\tvar x = remote.request_account_tx({","\t\t\taccount: focalNode,","\t\t\tlimit: TRANSACTION_PAGE_LENGTH,","\t\t\tledger_index_min: -1,","\t\t\tledger_index_max: -1,","\t\t\tforward: false,","\t\t\tmarker: nodes[nodeMap[focalNode]].transactionMarker","\t\t}, handleAccountTransactions);","\t\treturn x.message.id;","\t}})();","\tvar reqID = rrat();","\tpendingRequests[reqID] = {","\t\tfunc:rrat,","\t\ttimestamp:(new Date().getTime())","\t};","\t//when the answer comes back, see if it's new information.","\t//if so, update WITH THE NEW INFO ONLY (i.e., don't clear the whole table, only do","\t//$(\"#transactionThrobber\").remove();","\t//and add the new stuff.","}","","//Handlers","","function handleLines(err, obj) {","\tdelete pendingRequests[this.message.id];","\t\t//TEST_VERSION: DISCONNECT RIPPLE_NETWORK ","","\t/*","\tif (err && err.remote && (err.remote.error === \"actNotFound\" || err.remote.error === \"actMalformed\") ) {","\t\t$(\"#loading\").text(\"Account not found!\").css(\"color\",\"#a00\");","\t} else ","\t*/","\ta(obj)","\tfunction a(obj){","  //\tserverGetLines(address);","    //  addConnections(obj.account, obj.lines);","\t\t","    ","    //var shouldExpand = (mode==\"transaction\") || obj.lines.length<MAX_NUTL || confirm('This node has '+obj.lines.length+' unseen trust lines. Expanding it may slow down your browser. Are you sure?');","    //addConnections(obj.account, obj.lines, !shouldExpand);","    ","","    $scope.$apply(function(){})","    ","    //if (","\t\t//addConnections(obj.account, obj.lines);","\t}","}","","//BASICINCOME","/*","function handleTransaction(obj) {","    var tx  = obj.transaction;","    tx.meta = obj.meta;","\t$(\"#transactionFeedTable\").prepend(renderTransaction(tx));","\tif (obj.transaction.TransactionType == \"Payment\") {","\t\tanimateTransaction(tx);","\t}","}","*/","","/*","function handleLedger(err, obj) {","\tcurrentLedger = obj.ledger;","\t$(\"#ledgernumber\").text(commas(parseInt(currentLedger.ledger_index)));","\t$(\"#totalripples\").text(commas(parseInt(currentLedger.total_coins)/1000000));","}","*/","","function handleAccountData(err, obj) {","\tdelete pendingRequests[this.message.id];","\t//TEST_VERSION: DISCONNECT RIPPLE_NETWORK ","\t/*","\tif (err && err.remote && (err.remote.error === \"actNotFound\" || err.remote.error === \"actMalformed\" )) {","\t\t$(\"#loading\").text(\"Account not found!\").css(\"color\",\"#a00\");","\t} else ","\t*/","\ta()","\tfunction a(){","\t\tif ($.isEmptyObject(obj.account_data)) {","\t\t\talert(\"This address is not valid!\");","\t\t\tconsole.log(obj);","\t\t\trefocus(lastFocalNode,true);","\t\t} else {","\t\t\tvar n = nodes[nodeMap[obj.account_data.Account]];","\t\t\tn.account = obj.account_data; //XXXX Uncaught TypeError: Cannot set property 'account' of undefined","\t\t\tif (currentCurrency == \"XRP\") { // Change the size of the circles, and recalculate the arrows.","\t\t\t\tupdated = svg.select(\"g#nodeGroup\").select(\"circle#_\"+obj.account_data.Account);","\t\t\t\tupdated.attr(\"r\", nodeRadius(n));","\t\t\t\tsvg.select(\"g#haloGroup\").select(\"circle#halo_\"+obj.account_data.Account).attr(\"r\", HALO_MARGIN+nodeRadius(n));;","\t\t\t}","\t\t\tif (obj.account_data.Account == focalNode) {","\t\t\t\t//Update the XRP listing on the table below. (But don't rewrite the whole table)","\t\t\t\t$(\"#xrpBalance\").text(commas(n.account.Balance/1000000));","\t\t\t}","\t\t}","\t}","}","","function handleAccountTransactions(err, obj) {","\tdelete pendingRequests[this.message.id];","\tvar n = nodes[nodeMap[obj.account]];","\tvar noMoreTransactions = true;","\tif (n.transactions) { //XXXX Uncaught TypeError: Cannot read property 'transactions' of undefined ","\t\t//You don't want to add the same set of transactions more than once.","\t\t//So, only add the transactions if one of the following is true:","\t\t//1. We have no marker stored locally.","\t\t//2. The message had no marker, and we are not yet finished with the list.","\t\t//3. The message did have a marker, but its ledger number is less than that of the locally stored marker.","\t\tif (!n.marker || (!obj.marker && !n.transactionsFinished) || (obj.marker && n.marker.ledger>obj.marker.ledger)) {","\t\t\tn.transactions.push.apply(n.transactions, obj.transactions);","\t\t}","\t} else {","\t\tn.transactions = obj.transactions;","\t}","\t","\tif (obj.marker) {","\t\tn.transactionMarker = obj.marker;","\t} else {","\t\tn.transactionsFinished = true;","\t}","\tif (obj.account == focalNode) {","\t\tupdateTransactions(focalNode, true); //appending=true","\t}","}","","function handleIndividualTransaction(err, obj) {","\tdelete pendingRequests[this.message.id];","\ttxx = obj;","\tchangeMode(\"transaction\", txx);","}","","","","","","","// MODE CHANGING","","var mode = \"individual\";","var senderAddress;","","$scope.changeMode = function (newMode, data) {","\tif (mode != newMode) {","\t\tif (mode==\"individual\") {","\t\t\texitIndividualMode();","\t\t} else if (mode==\"transaction\") {","\t\t\texitTransactionMode();","\t\t} else if (mode==\"feed\") {","\t\t\texitFeedMode();","\t\t}","\t\tif (newMode==\"individual\") {","\t\t\tenterIndividualMode(data);","\t\t} else if (newMode==\"transaction\") {","\t\t\tenterTransactionMode(data);","\t\t} else if (newMode==\"feed\") {","\t\t\tenterFeedMode();","\t\t}","\t\tmode = newMode;","\t}","}","","function enterIndividualMode(data) {","\tif (mode != \"individual\") {","\t\t$(\"#leftHeading\").text(\"Balances\");","\t\t//$(\"#rightHeading\").text(\"History\");","\t\t$(\"#rippleName\").css(\"visibility\",\"visible\");","\t\t$(\"#focalAddress\").css(\"visibility\",\"visible\");","\t\t$(\"#balanceTable\").css(\"visibility\",\"visible\");","\t\t$(\"#transactionTable\").css(\"visibility\",\"visible\");","\t\t$(\"#transactionInformationContainer\").css(\"display\",\"none\"); //This is here because it is used by both feed and transaction modes.","\t\t$(\"#feedTab\").addClass(\"unselectedTab\").removeClass(\"selectedTab\").css(\"visibility\",\"visible\");","\t\t$(\"#individualTab\").removeClass(\"unselectedTab\").addClass(\"selectedTab\").css(\"visibility\",\"visible\");","\t\tif (data) {","\t\t\texpandNode(data);","\t\t\tsenderAddress = false;","\t\t}","\t\tmode = \"individual\";","\t}","}","function exitIndividualMode() {","\tif (mode == \"individual\") {","\t\t$(\"#rightHeading\").text(\"\");","\t\t$(\"#rippleName\").css(\"visibility\",\"hidden\");","\t\t$(\"#focalAddress\").css(\"visibility\",\"hidden\");","\t\t$(\"#balanceTable\").css(\"visibility\",\"hidden\");","\t\t$(\"#transactionTable\").css(\"visibility\",\"hidden\");","\t\t$(\"#transactionInformationContainer\").css(\"display\",\"inherit\");","\t}","}","","function enterFeedMode() {","\tif (mode != \"feed\") {","\t\t$(\"#feedTab\").removeClass(\"unselectedTab\").addClass(\"selectedTab\");","\t\t$(\"#individualTab\").addClass(\"unselectedTab\").removeClass(\"selectedTab\");","\t\t$(\"#transactionFeed\").css(\"display\",\"inherit\");","\t\t$(\"#leftHeading\").text(\"Live transaction feed\");","\t\tmode = \"feed\";","\t}","}","function exitFeedMode() {","\tif (mode == \"feed\") {","\t\t$(\"#transactionFeed\").css(\"display\",\"none\");","\t}","}","","function enterTransactionMode(tx) {","\tif (mode != \"transaction\") {","\t\teraseGraph();","\t\ttxx = tx;","\t\t$(\"#transactionInformation\").html(txDescription(tx));","\t\tvar currency;","\t\tif (tx.Amount.currency) {","\t\t\tcurrency = tx.Amount.currency;","\t\t} else {","\t\t\tcurrency = \"XRP\";","\t\t}","\t\tvar option = $(\"select#currency\").find(\"option[value=\"+currency+\"]\");","\t\tif (option.html()) {","\t\t\t$(\"select#currency\").selectbox(\"change\", currency, option.html());","\t\t} else {","\t\t\t$(\"select#currency\").selectbox(\"change\", \"___\", \"SSGSGS\");","\t\t\t$(\"#otherCurrency\").attr(\"value\",currency);","\t\t\t$('#otherCurrency').css('font-style','inherit').css('color','inherit');","\t\t\tchangeCurrency(\"___\");","\t\t}","\t\tsenderAddress = tx.Account;","\t\t","\t\twalkPaths(tx, true);","","\t\tsetTimeout(function(){animateTransaction(tx);}, 2000);","\t\t$(\"#leftHeading\").html(\"Transaction information <input type='button' style='position:absolute; top:56px; left:200px;' onclick='animateTransaction(txx);' value='Animate'/>\");","\t\t$(\"#feedTab\").addClass(\"unselectedTab\").removeClass(\"selectedTab\");","\t\t$(\"#individualTab\").addClass(\"unselectedTab\").removeClass(\"selectedTab\");","\t\t$(\"#transactionInformation\").css(\"display\",\"inherit\");","\t\tmode = \"transaction\";","\t}","}","function exitTransactionMode() {","\tif (mode == \"transaction\") {","\t\t$(\"#transactionInformation\").css(\"display\",\"none\");","\t}","}","","","function walkPaths(tx, clearing) {","\tvar anyNewNodes = false;","\tvar numberOfExistingNodes = nodes.length-1;","\tif (\"undefined\" == typeof nodeMap[tx.Account]) {","\t\tnodes.push({x:w*Math.random(), y:hh*Math.random(), account:{Account:tx.Account, Balance:0}, trustLines:[], balances:{} }); //","\t\tnodeMap[tx.Account] = nodes.length-1;","\t\tdegreeMap[tx.Account] = clearing ? 0 : 1;","\t\tanyNewNodes = true;","\t}","\tif (tx.Paths) {","\t\tfor (var i=0; i<tx.Paths.length; i++) {","\t\t\tfor (var j=0; j<tx.Paths[i].length; j++) {","\t\t\t\tvar address = tx.Paths[i][j].account;","\t\t\t\tif (\"undefined\" == typeof nodeMap[address]) {","\t\t\t\t\tif (address) {","\t\t\t\t\t\tnodes.push({x:w*Math.random(), y:hh*Math.random(), account:{Account:address, Balance:0}, trustLines:[], balances:{} });","\t\t\t\t\t\tnodeMap[address] = nodes.length-1;","\t\t\t\t\t\tdegreeMap[address] = 1;","\t\t\t\t\t\tconsole.log(\"Added node\");","\t\t\t\t\t\tanyNewNodes = true;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t}","\t}","\tif (\"undefined\" == typeof nodeMap[tx.Destination]) {","\t\tnodes.push({x:w*Math.random(), y:hh*Math.random(), account:{Account:tx.Destination, Balance:0}, trustLines:[], balances:{} });","\t\tnodeMap[tx.Destination] = nodes.length-1;","\t\tdegreeMap[tx.Destination] = clearing ? 0 : 1;","\t\tanyNewNodes = true;","\t}","\tif (anyNewNodes) {","\t\taddNodes(1);","\t}","\t","\tif (clearing) {\t//Do this if we just cleared the graph and are displaying the transaction.","\t\tfor (var i=0; i<nodes.length; i++) {","\t\t\tserverGetInfo(nodes[i].account.Account);","\t\t\tserverGetLines(nodes[i].account.Account);","\t\t}","\t} else if (anyNewNodes) { //Do this if we're displaying in place:","\t\t//Note: This will NOT display new connections between already existing nodes, even if the transaction uses them.","\t\tdisplayingTransactionInPlace = true;","\t\tfor (var i=numberOfExistingNodes; i<nodes.length; i++) {","\t\t\tserverGetInfo(nodes[i].account.Account);","\t\t\tserverGetLines(nodes[i].account.Account);","\t\t}","\t}","}","","function eraseGraph() {","\tzoomLevel = 1;","\ttranslationX = 0;","\ttranslationY = 0;","\tpanAndZoom();","\t$(\"#zoomInButton\").attr(\"disabled\",\"disabled\");","","\tsvg.select(\"g#nodeGroup\").selectAll(\"circle.node\").data([]).exit().remove();","\tsvg.select(\"g#linkGroup\").selectAll(\"line\")       .data([]).exit().remove();","\tsvg.select(\"g#haloGroup\").selectAll(\"circle.halo\").data([]).exit().remove();","\tsvg.select(\"g#arrowheadGroup\").selectAll(\"path.arrowhead\").data([]).exit().remove();","\t","\tnodes = [];","\tle_links = [];","\tnodeMap = {};","\texpandedNodes = {};","\tprovisionallyExpandedNodes = {};","\tanimatorLinks = [];","\t$(\"#loading\").css(\"display\",\"block\").css(\"color\",\"#aaa\");;","\t$(\"#loading\").html('<img src=\"throbber4.gif\" style=\"vertical-align: middle;\" /> Loading...');","}","","","// DATA-TO-HTML FUNCTIONS","function renderTransaction(tx) {","\tvar transactionType;","\tvar from = tx.Account;","\tvar to = null;","\tvar amount = null;","\tvar currency = null;","\tvar secondAmount = null;","\tvar secondCurrency = null;","\tif (tx.TransactionType == \"Payment\") {","\t\tamount = tx.meta.DeliveredAmount || tx.Amount;","\t\ttransactionType = \"send\";","\t\tto = tx.Destination;","\t} else if (tx.TransactionType == \"TrustSet\") {","\t\tamount = tx.LimitAmount;","\t\ttransactionType = \"trustout\";","\t\tto = tx.LimitAmount.issuer;","\t} else if (tx.TransactionType == \"OfferCreate\") {","\t\ttransactionType = \"offerout\";","\t\tamount = tx.TakerGets;","\t\tsecondAmount = tx.TakerPays;","\t} else if (tx.TransactionType == \"OfferCancel\") {","\t\ttransactionType = \"canceloffer\";","\t} else {return;}","\tif (amount) {","\t\tif (amount.currency) {","\t\t\tcurrency = amount.currency;","\t\t\tamount = amount.value;","\t\t} else {","\t\t\tcurrency = \"XRP\";","\t\t\tamount = amount/1000000;","\t\t}","\t}","\tif (secondAmount) {","\t\tif (secondAmount.currency) {","\t\t\tsecondCurrency = secondAmount.currency;","\t\t\tsecondAmount = secondAmount.value;","\t\t} else {","\t\t\tsecondCurrency = \"XRP\";","\t\t\tsecondAmount = secondAmount/1000000;","\t\t}","\t}","\ttransactionMap[tx.hash] = tx;","\treturn ('<tr>'+","\t\t'<td style=\"width:80px;\">'+absoluteTime(tx.date)+'</td>'+","\t\t'<td style=\"width:1px;\">'+clickableAccountSpan(from)+'</td>'+","\t\t'<td style=\"width:40px;\"><div '+(transactionType=='send'?'oncontextmenu=\"animateInPlaceWithHash(\\''+tx.hash+'\\');return false;\" onclick=\"showTransactionWithHash(\\''+tx.hash+'\\')\"':'')+' class=\"'+transactionType+' icon\" title=\"'+txAltText[transactionType]+'\">&nbsp;</div></td>'+","\t\t( to||secondAmount ?","\t\t\t'<td style=\"width:1px;\"><span class=\"bold amount small\">'+commas(amount)+'</span>&nbsp;<span class=\"light small darkgray\">'+currency+'</span></td>'+","\t\t\t'<td style=\"text-align:center; width:20px;\"><i class=\"light small darkgray\">'+","\t\t\t( to ?","\t\t\t\t'to</i></td>'+","\t\t\t\t'<td style=\"width:1px;\">'+clickableAccountSpan(to)+'</td>'","\t\t\t\t:","\t\t\t\t'for</i></td>'+","\t\t\t\t'<td style=\"width:1px;\"><span class=\"bold amount small\">'+commas(secondAmount)+'</span>&nbsp;<span class=\"light small darkgray\">'+secondCurrency+'</span></td>'","\t\t\t)","\t\t\t:","\t\t\t'<td colspan=3></td>'","\t\t)+","\t\t'</tr>');","}","","function clickableAccountSpan(address) {","\tvar o = \"<span class='light address' style='cursor:pointer;' \"+","\t\t\"onmouseover='lightenAddress(\\\"\"+address+\"\\\");' \"+","\t\t\"onmouseout='darkenAddress(\\\"\"+address+\"\\\");' \"+","\t\t\"onclick='expandNode(\\\"\"+address+\"\\\");'>\"+","\t\taddress+\"</span>\";","\treturn o;","}","","function txDescription(result) {","\tconsole.log(\"TX INFO:\",result);","  var xrpExpense;","  if (result.meta) {","    for (var i=0; i<result.meta.AffectedNodes.length; i++) {","      var an = result.meta.AffectedNodes[i];","      if (an.ModifiedNode && an.ModifiedNode.LedgerEntryType===\"AccountRoot\" && an.ModifiedNode.FinalFields.Account===result.Account) {","        xrpExpense = {before:an.ModifiedNode.PreviousFields.Balance/1000000 , after:an.ModifiedNode.FinalFields.Balance/1000000};","        break;","      }","    }","  }","    var amount = result.meta.DeliveredAmount || result.Amount;","\tvar output = (amount?\"<b>Amount:</b> <span class='amount'>\"+","\t\t(amount.currency ? commas(amount.value)+\" \"+amount.currency : commas(amount/1000000)+\" XRP\")+\"</span><br/>\"+","\t\t(amount.issuer ? \"<b>Issuer:</b> \"+clickableAccountSpan(amount.issuer)+\"<br/>\" : \"\"):\"\")+","\t\t\"<b>Path:</b><ul>\"+","\t\t(function(){","\t\t\tvar output = \"\";","\t\t\tif (result.Paths) {","\t\t\t\tfor (var i=0; i<result.Paths.length; i++) {","\t\t\t\t\tvar listItem = \"<li>\"+clickableAccountSpan(result.Account) + \" &rarr; \";","\t\t\t\t\tfor (var j=0; j<result.Paths[i].length; j++) {","\t\t\t\t\t\tif (result.Paths[i][j].account) {","\t\t\t\t\t\t\tlistItem += clickableAccountSpan(result.Paths[i][j].account) + \" &rarr; \";","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\tlistItem += (clickableAccountSpan(result.Destination) + \"</li>\");","\t\t\t\t\toutput += listItem;","\t\t\t\t}","\t\t\t} else {","\t\t\t\toutput += (\"<li>\"+clickableAccountSpan(result.Account)+ \" &rarr; \"+clickableAccountSpan(result.Destination)+\"</li>\");","\t\t\t}","\t\t\treturn output;","\t\t})()+","\t\t\"</ul>\"+","    (result.meta ? \"<b>Result:</b> \"+(result.meta.TransactionResult==\"tesSUCCESS\"?\"<span>\":\"<span style='color:#900;'>\")+result.meta.TransactionResult+\"</span><br/>\" : \"\")+","\t\t(xrpExpense||xrpExpense===0 ? \"<b>XRP change:</b> \"+commas(xrpExpense.before) + \" XRP &rarr; \"+commas(xrpExpense.after)+\" XRP (\"+(xrpExpense.after>=xrpExpense.before?\"+\":\"&ndash;\")+commas(Math.round(1000000*Math.abs(xrpExpense.before-xrpExpense.after))/1000000)+\" XRP)<br/>\" : \"\")+","    (result.date ? \"<b>Date:</b> \"+absoluteDateOnly(result.date)+\" \"+absoluteTimeOnly(result.date)+\"<br/>\" : \"\")+","    (result.InvoiceID ? \"<b>Invoice ID:</b> <tt>\"+result.InvoiceID+\"</tt><br/>\" : \"\")+","    (result.DestinationTag ? \"<b>Destination tag:</b> \"+result.DestinationTag+\"<br/>\" : \"\")+","\t\t\"<b>Hash:</b> <tt>\"+result.hash+\"</tt><br/>\"+","    (result.inLedger ? \"<b>Ledger:</b> \"+result.inLedger+\"<br/>\" : \"\")+","\t\t\"<b>Signing key:</b> <tt>\"+result.SigningPubKey+","\t\t\"</tt><br/><b>Signature:</b><br/><div class='bigString' style='width:\"+result.TxnSignature.length*4+\"px;'>\"+result.TxnSignature+\"</div>\";","\t\t","\treturn output;","}","","","function currentCurrencyBalance(accountNode) {","\tvar output;","\tif (currentCurrency == \"XRP\") {","\t\toutput = accountNode.account.Balance;","\t} else {","\t\toutput = accountNode.balances[currentCurrency];","\t\tif (!output) { output = 0; }","\t}","\treturn output;","}","","var displayingTransactionInPlace = false;","","function addConnections(origin, trustLines) {","","\tvar transactionMode = (mode==\"transaction\") || displayingTransactionInPlace;","\t$(\"#loading\").css(\"display\",\"none\");","\t","\t//Receive an array of the format:","\t//[{\"account\":\"rnziParaNb8nsU4aruQdwYE3j5jUcqjzFm\",\"balance\":\"0\",\"currency\":\"BTC\",\"limit\":\"0\",\"limit_peer\":\"0.25\",\"quality_in\":0,\"quality_out\":0},","\t//{\"account\":\"rU5KBPzSyPycRVW1HdgCKjYpU6W9PKQdE8\",\"balance\":\"0\",\"currency\":\"BTC\",\"limit\":\"0\",\"limit_peer\":\"10\",\"quality_in\":0,\"quality_out\":0}]","\tnodes[nodeMap[origin]].trustLines = trustLines; //XXXX Uncaught TypeError: Cannot set property 'trustLines' of undefined ","\tnodes[nodeMap[origin]].balances = getBalances(origin);","","\tif (origin == focalNode) {","\t\tupdateInformation(origin);","\t}","\t","\tif (currentCurrency != \"XRP\") { // Change the size of the circle, if we needed to wait until now to figure out its balance (i.e. we're looking at a currency other than XRP.)","\t\tsvg.select(\"g#nodeGroup\")","\t\t\t.select(\"circle#_\"+origin)","\t\t\t.attr(\"r\", nodeRadius(nodes[nodeMap[origin]]) );","\t\tsvg.select(\"g#haloGroup\")","\t\t\t.select(\"circle#halo_\"+origin)","\t\t\t.attr(\"r\", HALO_MARGIN+nodeRadius(nodes[nodeMap[origin]]) );","\t}","","\tif ((degreeMap[origin] < RECURSION_DEPTH || ( degreeMap[origin] == RECURSION_DEPTH) && transactionMode) && (transactionMode || trustLines.length<MAX_NUTL || confirm('This node has '+trustLines.length+' unseen trust lines. Expanding it may slow down your browser. Are you sure?')) ) {","\t\tif (!transactionMode) {","\t\t\texpandedNodes[origin] = true;","\t\t} else {","\t\t\tprovisionallyExpandedNodes[origin] = true;","\t\t}","\t\tvar newNodes = [];","\t\tvar newLinks = [];","\t\tfor (var i=0; i<trustLines.length; i++) {","\t\t\tvar linkWasToExisting = false;","\t\t\t// add trustLines[i][\"account\"] to the list of nodes, if it's not on it already.","\t\t\t// add a link from the current node to trustLines[i][\"account\"], if it's not there already.","\t\t\ttrustLine = trustLines[i];","\t\t\taccount = trustLine[\"account\"];","\t\t\t// Fetch the node corresponding to the counterparty of this trust line,","\t\t\t// or if it's not on the list yet, create one and add it to the list.","\t\t\tif (\"undefined\" == typeof nodeMap[account]) {","\t\t\t\tif (!transactionMode && (parseFloat(trustLine.limit) != 0.0 ||  parseFloat(trustLine.limit_peer) != 0.0) ) {","\t\t\t\t\tnodeMap[account]=nodes.length;","\t\t\t\t\tdegreeMap[account] = degreeMap[origin] + 1;","\t\t\t\t\tvar angle = Math.random() * 6.283185307179586;","\t\t\t\t\tvar radius= Math.random() * 100;","\t\t\t\t\tvar node = {","\t\t\t\t\t\tx:nodes[nodeMap[origin]].x+Math.cos(angle)*radius,","\t\t\t\t\t\ty:nodes[nodeMap[origin]].y+Math.sin(angle)*radius,","\t\t\t\t\t\taccount: {","\t\t\t\t\t\t\tAccount:account,","\t\t\t\t\t\t\tBalance:\"0\",","\t\t\t\t\t\t},","\t\t\t\t\t\ttrustLines: [],","\t\t\t\t\t\tbalances: {}","\t\t\t\t\t}","\t\t\t\t\tnewNodes.push(node);","\t\t\t\t\tnodes.push(node);","\t\t\t\t\t//Only add the node if the trust line is non-zero.","\t\t\t\t\tdegreeMap[account] = degreeMap[origin] + 1; ","\t\t\t\t\tserverGetInfo(account); //If this node is not on the list yet, we're going to need to get the info and trustLines for it.","\t\t\t\t\tserverGetLines(account);","\t\t\t\t}","\t\t\t} else {","\t\t\t\tvar node = nodes[nodeMap[account]];","\t\t\t\tlinkWasToExisting = true;","\t\t\t}","\t\t\t// Now, create links to all of the counterparties that have not been expanded (ie., had their links displayed.). If we're in transaction mode, only add links to existing nodes.","\t\t\tif ( (!transactionMode && !expandedNodes[account]) || (transactionMode && linkWasToExisting && !provisionallyExpandedNodes[account]) )  {","\t\t\t\tvar link={};","\t\t\t\tfunction goon(link) {","\t\t\t\t\tif (parseFloat(trustLine.limit) != 0.0 && parseFloat(trustLine.limit_peer) != 0.0) {","\t\t\t\t\t\tlink.strength = 0.5;","\t\t\t\t\t} else {","\t\t\t\t\t\tlink.strength = 1;","\t\t\t\t\t}","\t\t\t\t\tlink.currency=trustLines[i].currency;","\t\t\t\t\tle_links.push(link);","\t\t\t\t}","\t\t\t\tif (parseFloat(trustLine.limit) != 0.0) {","\t\t\t\t\tlink.source=nodes[nodeMap[ origin ]];","\t\t\t\t\tlink.target=node;","\t\t\t\t\tlink.value= parseFloat(trustLine.limit);","\t\t\t\t\tgoon(link);","\t\t\t\t}","\t\t\t\tif (parseFloat(trustLine.limit_peer) != 0.0) {","\t\t\t\t\tvar link={};","\t\t\t\t\tlink.target=nodes[nodeMap[ origin ]];","\t\t\t\t\tlink.source=node;","\t\t\t\t\tlink.value= parseFloat(trustLine.limit_peer);","\t\t\t\t\tgoon(link);","\t\t\t\t}","\t\t\t}","\t\t\t","\t\t\tif (linkWasToExisting) {","\t\t\t//If we're adding a trust line to an already-existing node, check that node again to see if we should put a halo on it.","\t\t\t\tsvg.select(\"g#haloGroup\").select(\"circle#halo_\"+account)","\t\t\t\t\t.style(\"stroke\", (numberOfUnseenTrustLines(node)>0)?\"#aaa\":\"none\" );","\t\t\t}","\t\t}","\t}","\t","\treassignColors(origin);","\taddNodes(degreeMap[origin]+1);","\t","","\t//should we add a halo to origin?","\tsvg.select(\"g#haloGroup\").select(\"circle#halo_\"+origin)","\t\t.style(\"stroke\", (numberOfUnseenTrustLines(nodes[nodeMap[origin]])>0)?\"#aaa\":\"none\" );","\tdisplayingTransactionInPlace = false; //really?","}","","","","var svg = d3.select(\"#visualization\")","\t.append(\"svg:svg\")","\t.attr(\"width\", \"100%\")","\t.attr(\"height\", h).attr(\"pointer-events\", \"all\")","\t.style(\"background-color\", \"#fff\").on(\"click\",function(){","\t\tif($('.sbOptions').css(\"display\") == \"block\") {","\t\t\t$('.sbToggle').trigger('click');","\t\t}","\t\tif($('#otherCurrency').css(\"display\") == \"block\") {","\t\t\t$('#otherCurrency').trigger('blur');","\t\t}","\t})","\t.style(\"float\",\"left\")//.style({\"border-left\":\"1px solid #c8c8c8\", \"border-right\":\"1px solid #c8c8c8\", \"border-top\":\"1px solid #c8c8c8\"})","\t.style(\"margin-right\",\"10\").call(d3.behavior.drag().on(\"drag\", redraw));","","var zoomLevel = 1;","var translationX = 0;","var translationY = 0;","var panOffset = [0,0];","function redraw() {","  translationX += d3.event.dx;","  translationY += d3.event.dy;","  panAndZoom();","}\t","","","function zoomOut() {","\tif (zoomLevel >= 1) {","\t\t$(\"#zoomInButton\").removeAttr(\"disabled\");","\t}","\ttranslationX += (w/8 * zoomLevel);","\ttranslationY += (hh/8 * zoomLevel);","\tpanOffset[0] -= (w/8 * zoomLevel);","\tpanOffset[1] -= (hh/8 * zoomLevel);","\tzoomLevel *= 0.75;","\tpanAndZoom();","}","","function zoomIn() {","\tzoomLevel /= 0.75;","\tif (zoomLevel >= 1) {","\t\tzoomLevel = 1;","\t\t$(\"#zoomInButton\").attr(\"disabled\",\"disabled\");","\t}","\ttranslationX -= (w/8 * zoomLevel);","\ttranslationY -= (hh/8 * zoomLevel);","\tpanOffset[0] += (w/8 * zoomLevel);","\tpanOffset[1] += (hh/8 * zoomLevel);","\tpanAndZoom();","}","","function panAndZoom() {","\tlinkGroup.attr     (\"transform\",\"translate(\" + [translationX,translationY] + \"),scale(\"+zoomLevel+\")\");","\tnodeGroup.attr     (\"transform\",\"translate(\" + [translationX,translationY] + \"),scale(\"+zoomLevel+\")\");","\thaloGroup.attr     (\"transform\",\"translate(\" + [translationX,translationY] + \"),scale(\"+zoomLevel+\")\");","\tarrowheadGroup.attr(\"transform\",\"translate(\" + [translationX,translationY] + \"),scale(\"+zoomLevel+\")\");","}","","var defs = svg.append(\"defs\");","","function defineRadialGradient(name, innerColor, outerColor) {","\tvar radGrad = defs.append(\"radialGradient\")","\t\t.attr(\"id\", name)","\t\t.attr(\"fx\", \"50%\")","\t\t.attr(\"fy\", \"50%\")","\t\t.attr(\"r\", \"100%\")","\t\t.attr(\"spreadMethod\", \"pad\");","\tradGrad.append(\"stop\")","\t\t.attr(\"offset\",\"0%\")","\t\t.attr(\"stop-color\",innerColor)","\t\t.attr(\"stop-opacity\",\"1\");","\tradGrad.append(\"stop\")","\t\t.attr(\"offset\",\"100%\")","\t\t.attr(\"stop-color\",outerColor)","\t\t.attr(\"stop-opacity\",\"1\");","}","","for (var cur in COLOR_TABLE) {\t","\tvar shades = COLOR_TABLE[cur];","\tfor (var i=0; i<shades.length; i++) {","\t\tdefineRadialGradient(\"gradient\"+cur+i, shades[i][0], shades[i][1]);","\t}","}","","function defineFilter(name, red, green, blue) {","\tvar filter = defs.append(\"filter\").attr(\"id\",name).attr(\"x\",\"-200%\").attr(\"y\",\"-200%\").attr(\"width\",\"800%\").attr(\"height\",\"800%\");","\tvar fct = filter.append(\"feComponentTransfer\").attr(\"in\",\"SourceAlpha\");","\tfct.append(\"feFuncR\").attr(\"type\",\"discrete\").attr(\"tableValues\",red+\" 1\");","\tfct.append(\"feFuncG\").attr(\"type\",\"discrete\").attr(\"tableValues\",green+\" 1\");","\tfct.append(\"feFuncB\").attr(\"type\",\"discrete\").attr(\"tableValues\",blue+\" 1\");","\tfilter.append(\"feGaussianBlur\").attr(\"stdDeviation\",\"20\");","\tfilter.append(\"feOffset\").attr(\"dx\",\"0\").attr(\"dy\",\"0\").attr(\"result\",\"shadow\");","\tfilter.append(\"feComposite\").attr(\"in\",\"SourceGraphic\").attr(\"in2\",\"shadow\").attr(\"operator\",\"over\");","}","","","for (cur in HIGH_SATURATION_COLORS) {","\tvar red = HEX_TO_PERCENT[HIGH_SATURATION_COLORS[cur].charAt(1)];","\tvar green = HEX_TO_PERCENT[HIGH_SATURATION_COLORS[cur].charAt(2)];","\tvar blue = HEX_TO_PERCENT[HIGH_SATURATION_COLORS[cur].charAt(3)];","\tdefineFilter(\"shine\"+cur, red, green, blue);","}","","","var haloGroup = svg.append(\"g\").attr(\"id\",\"haloGroup\");","var linkGroup = svg.append(\"g\").attr(\"id\",\"linkGroup\");","var arrowheadGroup = svg.append(\"g\").attr(\"id\",\"arrowheadGroup\");","var nodeGroup = svg.append(\"g\").attr(\"id\",\"nodeGroup\");","","function nodeRadius(accountNode) {","\tvar bal = currentCurrencyBalance(accountNode);","\tif (currentCurrency != \"XRP\") {","\t\tbal = bal * 1000000000;","\t} ","\treturn 14+Math.pow(Math.log(Math.abs(bal)+1),3) / 2000;","\t//TESTING FUN STUFF","\t/*var tl = accountNode.trustLines.length;","\treturn 2+Math.pow(Math.log(1+tl),4)/25;*/","}","","var force = d3.layout.force()","\t.size([(window.innerWidth > 0) ? window.innerWidth : screen.width, 710]) //w","\t.linkDistance(80)","\t.linkStrength(function(d) {","\t\tif (currentCurrency == \"XRP\" || currentCurrency == d.currency) {","\t\t\treturn d.strength * 0.25;","\t\t} else {","\t\t\treturn 0;","\t\t}","\t}).friction(0.5)","\t.charge(-1500).nodes([]).links([]).start();","","\t","","","","function expandNode(address) {","\tif (typeof(nodes[nodeMap[address]]) !== \"undefined\") {","\t\tvar nutl = numberOfUnseenTrustLines(nodes[nodeMap[address]]);","\t} else {","\t\tvar nutl = 0;","\t}","\t","\tchangingFocus = true;","\twindow.location.hash = address;","\tchangeMode(\"individual\");","\tlastFocalNode = focalNode;","\tfocalNode = address;","\tif (\"undefined\" == typeof nodeMap[address]) {","\t\trefocus(address, false);","\t} else {","\t\tif (!nodes[nodeMap[address]].transactions || nodes[nodeMap[address]].transactions.length === 0) {","\t\t\tgetNextTransactionPage();","\t\t}","\t\tdegreeMap = {};","\t\tdegreeMap[address] = 0;","\t\treassignColors(address);","\t\tcolorRogueNodes();","\t\tif (expandedNodes[address]) {} else {","\t\t\tif (nutl<MAX_NUTL || confirm('This node has '+nutl+' unseen trust lines. Expanding it may slow down your browser. Are you sure?')) {","\t\t\t\tserverGetLines(address);","\t\t\t} ","\t\t}","\t\tupdateInformation(address);","\t}","\t","}","","","function borderColor(cur, colorDegree) {","\tif (colorDegree == 0) {","\t\treturn \"#fc0\"; //It actually doesn't use the border color for the focal node.","\t} else {","\t\treturn COLOR_TABLE[cur][colorDegree-1][1]; //Use the rim color of the next darkest degree.","\t}","}","","","function findCur(d) {","\tvar cur = currentCurrency;","\tif(cur != \"XRP\") {","\t\tif(!d.balances[cur]){cur=\"__Z\";}","\t\telse if(d.balances[cur]<0){cur=\"__N\";}","\t\telse if(!COLOR_TABLE.hasOwnProperty(cur)) {cur = \"___\";}","\t}","\treturn cur;","}","","function lightenNodeFunction(colorDegree) {","\treturn function(d) {","\t\tvar cur = findCur(d);","\t\td3.select(d3.event.target).style(\"fill\", \"url(#gradient\"+cur+(colorDegree+1)+\")\").style(\"stroke-width\", 2).style(\"stroke\", \"#fc0\" );","\t}","}","function darkenNodeFunction(colorDegree) {","\treturn function(d) {","\t\tvar cur = findCur(d);","\t\td3.select(d3.event.target).style(\"fill\", \"url(#gradient\"+cur+(colorDegree)+\")\").style(\"stroke-width\", (colorDegree==0?5:0.5)).style(\"stroke\", function(d){var cur = findCur(d); return borderColor(cur,colorDegree);} );","\t}","}","function lightenAddress(address) {","\tif (typeof degreeMap[address] != \"undefined\") {","\t\tvar colorDegree = Math.min(degreeMap[address], 3);","\t\tvar cur = findCur(force.nodes()[nodeMap[address]]);","\t\tnodeGroup.select(\"#_\"+address).style(\"fill\", \"url(#gradient\"+cur+(colorDegree+1)+\")\").style(\"stroke-width\", 2).style(\"stroke\", \"#fc0\" );","\t}","}","function darkenAddress(address) {","\tif (typeof degreeMap[address] != \"undefined\") {","\t\tvar colorDegree = Math.min(degreeMap[address], 3);","\t\tvar cur = findCur(force.nodes()[nodeMap[address]]);","\t\tnodeGroup.select(\"#_\"+address).style(\"fill\", \"url(#gradient\"+cur+(colorDegree)+\")\").style(\"stroke-width\", (colorDegree==0?5:0.5)).style(\"stroke\", function(d){var cur = findCur(d); return borderColor(cur,colorDegree);} );","\t}","}","","","function numberOfUnseenTrustLines(aNode) {","\tvar output = 0;","\tvar trustLines = aNode.trustLines;","\tfor (var i=0; i<trustLines.length; i++) {","\t\tif ((trustLines[i].limit!=0 || trustLines[i].limit_peer!=0) && isLineInvisible(aNode.account.Account, trustLines[i].account)) {","\t\t\toutput++;","\t\t}","\t}","\treturn output;","}","","function isLineInvisible(source, target) {","\tfor (var j=0; j<le_links.length; j++) {","\t\tif ((le_links[j].source.account.Account==source && le_links[j].target.account.Account==target) ||","\t\t\t(le_links[j].source.account.Account==target && le_links[j].target.account.Account==source)  ) {","\t\t\treturn false;","\t\t}","\t}","\treturn true;","}","","","function colorNodes(nodeSelection, colorDegree) {","\tnodeSelection.style(\"fill\", function(d) { ","\t\t\tvar cur = findCur(d);","\t\t\treturn (\"url(#gradient\"+cur+colorDegree+\")\");","\t\t})","\t\t.style(\"stroke\", function(d){var cur = findCur(d); return borderColor(cur,colorDegree);} )","\t\t.style(\"stroke-width\", 0.5 )","\t\t.on(\"mouseover\", lightenNodeFunction(colorDegree))","\t\t.on(\"mouseout\", darkenNodeFunction(colorDegree));","\tif (colorDegree == 0) {","\t\tnodeSelection.style(\"stroke-width\", 5);","\t}","}","","function reassignColors(address) {","\tvar colorDegree = Math.min(degreeMap[address], 3);","\tcolorNodes(svg.select(\"g#nodeGroup\").select(\"circle#_\"+address), colorDegree)","\t","\tfunction goon(counterparty) { // ...then reassign the colors of each counterparty too,","\t\t//only if the new degree is lower than the previous one (or the degree is as yet unknown)","\t\tif (typeof degreeMap[counterparty] == \"undefined\" || degreeMap[counterparty] > degreeMap[address]+1) {","\t\t\tdegreeMap[counterparty] = degreeMap[address]+1;","\t\t\treassignColors(counterparty);","\t\t}","\t}","\tfor (var i=0; i<le_links.length; i++) {","\t\tvar link = le_links[i];","\t\tif (link.source.account.Account == address) { // If this address is party to the link...","\t\t\tgoon(link.target.account.Account);","\t\t} else if (link.target.account.Account == address) {","\t\t\tgoon(link.source.account.Account);","\t\t}","\t}","}","","function colorRogueNodes() {","\tfor (var address in nodeMap) {","\t\tif (typeof degreeMap[address] == \"undefined\") {","\t\t\tdegreeMap[address] = Infinity;","\t\t\tcolorNodes(svg.select(\"g#nodeGroup\").select(\"circle#_\"+address), 3);","\t\t}","\t}\t","}","","","","","","function lineLength(lineElement) {","\treturn Math.sqrt(Math.pow(lineElement.attr(\"x1\")-lineElement.attr(\"x2\"),2) + Math.pow(lineElement.attr(\"y1\")-lineElement.attr(\"y2\"),2));","}","","function shine(onOrOff, address, cur) {","\t$(\"#_\"+address).attr(\"filter\",(onOrOff ? \"url(#shine\"+cur+\")\" : \"none\"));","}","","","","var animatorLinks = [];","","","","function animateLink(onOrOff, speed, from, to, cur, callback) {","\tif (typeof nodeMap[from] == \"undefined\" || typeof nodeMap[to] == \"undefined\") {","\t\tsetTimeout(callback, 10.0/speed);","\t} else {","\t\tvar animator = $(\"#\" + from + \"_\" + to + \"_\" + cur);","\t\tif (animator.length == 0) {","\t\t\tanimatorLinks.push({source:nodes[nodeMap[from]], target:nodes[nodeMap[to]], value:100, currency:currency, strength:0});","\t\t\tvar alink = svg.select(\"g#linkGroup\").selectAll(\"line.animator\").data(animatorLinks)","\t\t\t\t.enter().append(\"svg:line\")","\t\t\t\t.attr(\"x1\", function(d){ return d.source.x; })","\t\t\t\t.attr(\"y1\", function(d){ return d.source.y; })","\t\t\t\t.attr(\"x2\", function(d){ return d.target.x; })","\t\t\t\t.attr(\"y2\", function(d){ return d.target.y; })","\t\t\t\t.attr(\"class\", \"animator\")","\t\t\t\t.attr(\"id\", from + \"_\" + to + \"_\" + cur )","\t\t\t\t.style(\"stroke\",function(d){ return HIGH_SATURATION_COLORS[cur];} )","\t\t\t\t.style(\"z-index\",\"2\")","\t\t\t\t.style(\"stroke-dasharray\",\"0,999999\")","\t\t\t\t.attr(\"stroke-width\", 10);","\t\t\tanimator = $(\"#\" + from + \"_\" + to + \"_\" + cur);","\t\t}","","\t\tanimator.css(\"display\",\"inherit\");","\t\tvar pct = 1;","\t\tvar interval = setInterval( function(){","\t\t\tvar len = lineLength(animator) * (1-pct);","\t\t\tif (onOrOff == true) { //If we're turning it on","\t\t\t\tanimator.css(\"stroke-dasharray\",len+\", 999999\");","\t\t\t} else { //If we're turning it off","\t\t\t\tanimator.css(\"stroke-dasharray\",\"0, \"+len+\", 999999\");","\t\t\t}","\t\t\tpct -= speed;","\t\t\tif (pct <= 0) {","\t\t\t\tif (onOrOff == true) {","\t\t\t\t\tanimator.css(\"stroke-dasharray\",\"\");","\t\t\t\t} else {","\t\t\t\t\tanimator.css(\"display\",\"none\");","\t\t\t\t}","\t\t\t\tclearInterval(interval);","\t\t\t\tcallback();","\t\t\t}","\t\t}, 10 );","\t}","}","","","function animateTransaction(tx) {","\tvar cur;","","\t","\tvar initialCur;","\tif (tx.SendMax && tx.SendMax.currency) {","\t\tinitialCur = tx.SendMax.currency;","\t\tif(!HIGH_SATURATION_COLORS.hasOwnProperty(initialCur)) {initialCur = \"___\";}","\t} else {","\t\tinitialCur = \"XRP\";","\t}\t","\tshine(true, tx.Account, initialCur);","\t","\tif (tx.Amount.currency) {","\t\tfinalCur = tx.Amount.currency;","\t\tif(!HIGH_SATURATION_COLORS.hasOwnProperty(finalCur)) {finalCur = \"___\";}","\t} else {","\t\tfinalCur = \"XRP\";","\t}\t","\t","\tvar finalCur;","\tif (tx.Amount.currency) {","\t\tfinalCur = tx.Amount.currency;","\t\tif(!HIGH_SATURATION_COLORS.hasOwnProperty(finalCur)) {finalCur = \"___\";}","\t} else {","\t\tfinalCur = \"XRP\";","\t}","\t","\tvar pathList;","\tif (tx.Paths) {","\t\tpathList = [];","\t\tfor (var i=0; i<tx.Paths.length; i++) {","\t\t\tvar thisOldPath = tx.Paths[i];","\t\t\tvar thisPath = [];","\t\t\tfor (var j=0; j<thisOldPath.length; j++) {","\t\t\t\tif (thisOldPath[j].account) {","\t\t\t\t\tthisPath.push(thisOldPath[j]);","\t\t\t\t}","\t\t\t}","\t\t\tpathList.push(thisPath);","\t\t}","\t\tfor (var i=0; i<pathList.length; i++) {","\t\t\tanimatePath(true, i);","\t\t}","\t} else {","\t\tpathList = [[]];","\t\tanimatePath(true, 0);","\t}","\t","\tfunction animatePath(onOrOff, i) {","\t\tif (i==pathList.length) {","\t\t\tconsole.log(\"Done with every path!\");","\t\t} else {","\t\t\tvar path = pathList[i];","\t\t\tvar lastNode = tx.Account;","\t\t\tvar nextNode;","\t\t\tvar speed = 0.01 * (path.length + 1);","\t\t\tfunction animatePathLink(j) {","\t\t\t\tif (j==path.length) {","\t\t\t\t\tanimateLink(onOrOff, speed, lastNode, tx.Destination, finalCur, function(){shine(onOrOff, tx.Destination, finalCur); if(onOrOff) {shine(false, tx.Account); animatePath(false, i);} });","\t\t\t\t} else {","\t\t\t\t\tnextNode = path[j].account;","\t\t\t\t\tif (path[j].currency) {","\t\t\t\t\t\tcur = path[j].currency;","\t\t\t\t\t\tif(!HIGH_SATURATION_COLORS.hasOwnProperty(cur)) {cur = \"___\";}","\t\t\t\t\t} else {","\t\t\t\t\t\tcur = \"XRP\";","\t\t\t\t\t}","\t\t\t\t\t","\t\t\t\t\tanimateLink(onOrOff, speed, lastNode, nextNode, cur, function(){shine(onOrOff, nextNode, cur); animatePathLink(j+1)});","\t\t\t\t\tlastNode = nextNode;","\t\t\t\t}","\t\t\t}","\t\t\tanimatePathLink(0);","\t\t}","\t}","}","","","","","","var lastNodeTouched = \"\";","","function stopExpandResume(d) {","\tforce.stop();","\texpandNode(d.account.Account);","\tsetTimeout(force.resume,500);","}","","function addNodes(degree) {","","\tforce.nodes(nodes).links(le_links);","\tvar timer;","\tvar colorDegree = Math.min(degree, 3);","\tvar node = svg.select(\"g#nodeGroup\").selectAll(\"circle.node\").data(nodes)","\t\t.enter().append(\"svg:circle\")","\t\t.attr(\"class\", \"node\")","\t\t.attr(\"id\", function(d) { return \"_\"+d.account.Account;})","\t\t.attr(\"cx\", function(d) { return d.x; })","\t\t.attr(\"cy\", function(d) { return d.y; })","\t\t.attr(\"r\", nodeRadius )","\t\t.attr(\"title\", function(d) { return d.account.Account; })","\t\t.style(\"cursor\", \"pointer\")","\t\t.on(\"touchstart\", function() {  } )","\t\t.on(\"touchmove\", function(d) { lastNodeTouched=d.account.Account; } )","\t\t.on(\"touchend\", function(d) { if (lastNodeTouched != d.account.Account) {stopExpandResume(d); lastNodeTouched=d.account.Account;} else {lastNodeTouched=\"\";} } )","\t\t.on(\"click\", stopExpandResume );","\tcolorNodes(node, colorDegree);","\tnode.append(\"svg:title\").text( function(d) { return d.account.Account;} );","\tnode.call(force.drag);","\t","\t","","\tvar link = svg.select(\"g#linkGroup\").selectAll(\"line.static\").data(force.links())","\t\t.enter().append(\"svg:line\")","\t\t.attr(\"class\",\"static\")","\t\t.style(\"stroke\",\"#000\")","\t\t.style(\"opacity\",\"0.2\")","\t\t.attr(\"stroke-width\", linkOrNot);","","","\tfunction arrowheadPath(radius, theta) {","\t\tvar rCosTheta = radius*Math.cos(theta);","\t\tvar rSinTheta = radius*Math.sin(theta);","\t\treturn \"M 0 0 L \"+","\t\t\trCosTheta+\" \"+rSinTheta+\" L \"+","\t\t\t(rCosTheta+rSinTheta*Math.sqrt(3))+\" 0 L \"+","\t\t\trCosTheta+\" \"+(-rSinTheta)+\" z\";","\t}","\tvar arrowhead = svg.select(\"g#arrowheadGroup\").selectAll(\"path.arrowhead\").data(force.links())","\t\t.enter().append(\"svg:path\")","\t\t.attr(\"class\", \"arrowhead\");","","","\tarrowhead = setArrowheads(arrowhead);","\t","\tfunction euclidean(pointA, pointB) {","\t\treturn Math.sqrt(Math.pow(pointA.x-pointB.x,2)","\t\t\t+Math.pow(pointA.y-pointB.y,2));","\t}","\t","\tfunction projection(distance, origin, towards) {","\t\tvar farDistance = euclidean(origin, towards);","\t\tvar scalar = distance/farDistance;","\t\tvar xOutput = origin.x + (towards.x-origin.x)*scalar;","\t\tvar yOutput = origin.y + (towards.y-origin.y)*scalar;","\t\treturn {x:xOutput, y:yOutput};","\t}","\t","\tfunction angle(pointA, pointB) {","\t\treturn 180/Math.PI * Math.atan2(pointB.y-pointA.y, pointB.x-pointA.x);","\t}","\t","\tfunction thetaValue(value) {","\t\treturn value/(1+value) * 1.04719755 // max = 60 degrees in radians","\t}","\t","\tfunction setArrowheads(selection) {","\t\treturn selection","\t\t\t.attr(\"transform\", function(d) {","\t\t\t\tvar position = d.source;","\t\t\t\treturn \"translate(\"+position.x+\",\"+position.y+\"), rotate(\"+angle(d.source,d.target)+\",0,0)\";","\t\t\t})","\t\t\t.attr(\"d\", function(d) {return arrowheadPath(parseFloat($(\"#_\"+d.source.account.Account).attr(\"r\")), thetaValue(d.value)); } )","\t\t\t.style(\"fill\", function(d){ return (isLinkVisible(d) ? \"#000\" : \"none\"); } );","","\t}","","\t","\tvar halo = svg.select(\"g#haloGroup\").selectAll(\"circle.halo\").data(nodes)","\t\t.enter().append(\"svg:circle\")","\t\t.attr(\"class\", \"halo\")","\t\t.attr(\"id\", function(d) { return \"halo_\"+d.account.Account;})","\t\t.attr(\"cx\", function(d) { return d.x; })","\t\t.attr(\"cy\", function(d) { return d.y; })","\t\t.attr(\"r\", function(d){ return HALO_MARGIN+nodeRadius(d);} )","\t\t.style(\"fill\", \"none\" )","\t\t.style(\"stroke\", \"none\" )","\t\t.style(\"stroke-width\", 1 );","\t\t","\tforce.start();","  ","","","\t","","\tforce.on(\"tick\", function(e) {","\t\tvar node = svg.selectAll(\"circle.node\");","\t\tvar halo = svg.selectAll(\"circle.halo\");","\t\tvar arrowhead = svg.selectAll(\"path.arrowhead\");","\t\tvar link = svg.selectAll(\"line\");","\t\tnode.attr(\"cx\", function(d) { return d.x; })","\t\t\t.attr(\"cy\", function(d) { return d.y; });","\t\tlink.attr(\"x1\", function(d) {return d.source.x;})","\t\t\t.attr(\"y1\", function(d) {return d.source.y;})","\t\t\t.attr(\"x2\", function(d) {return d.target.x;})","\t\t\t.attr(\"y2\", function(d) {return d.target.y;});","\t\thalo.attr(\"cx\", function(d) { return d.x; })","\t\t\t.attr(\"cy\", function(d) { return d.y; });","\t\tsetArrowheads(arrowhead);","\t});","}","","function name_to_address(focus, erase, noExpand){//search nodes by ripple-name","","//basicincome","if(focus.length !== 34){","\t$vaultClient.vaultClient.getAuthInfo(focus, ripple_name);","}","else refocus(focus, erase, noExpand)","","\tfunction ripple_name(err, data){","\t\tconsole.log(data)","\t\tif(err)console.log(err)","\t\tvar authInfo = data","\t\trefocus(authInfo.address, erase, noExpand)","\t}","}","","function refocus(focus, erase, noExpand) {","\t","","\tchangingFocus = true;","\tif (erase) {","\t\teraseGraph();","\t}","\twindow.location.hash = focus;","\tlastFocalNode = focalNode;","\tfocalNode = focus;","\tnodeMap[focalNode] = nodes.length;","\tnodes.push({x:0.5*w, y:hh/2, account:{Account:focalNode, Balance:0}, trustLines:[], balances:{} });","\tdegreeMap = {};","\tdegreeMap[focalNode] = 0;","\tif (!noExpand) {","\t\tserverGetLines(focalNode);","\t}","\taddNodes(0);","\treassignColors(focalNode);","\tcolorRogueNodes();","\tserverGetInfo(focalNode);","\tupdateInformation(focus);","  getNextTransactionPage();","}","","","","function commas(number) {","  var parts = number.toString().split(\".\");","  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");","  return parts.join(\".\");","}","","function abbreviate(address) {","\treturn address.slice(0,25)+\"...\";","}","","function magnitude(oom) {","  var mfo3 = Math.floor(oom/3);","  var text = {1:\"K\", 2:\"M\", 3:\"B\", 4:\"T\", 5:\"Q\"}[mfo3];","  var value;","  if (text) {","    value = Math.pow(1000, mfo3);","  } else {","    value = Math.pow(10, oom);","    text = \"&times;10<sup>\"+(\"\"+oom).replace(\"-\",\"&#8209;\")+\"</sup>\";","  }","  return {value:value, text:text};","}","","function roundNumber(number) {","  var man = Math.abs(number);","\tif (number == 0 || (man < 100000.00 && man > 0.00001)) {","\t\treturn commas(Math.round(number*100)/100);","\t} else {","\t\tvar oom = Math.floor((Math.log(man)+0.00000000000001) / Math.LN10);","    var mag = magnitude(oom);","    var rounded = Math.round(number/mag.value*100)/100;","\t\treturn commas(rounded) + mag.text;","\t}","}","","function updateInformation(address) {","\t$('#focus').val(address);","\t","\tfunction update_html(err, rippleName){","\t\t\t$('#rippleName').text(\"~\"+rippleName);","\t}","\t","\t$('#focalAddress').text(address);","\t","\t$vaultClient.vaultClient.getRippleName(address, \"https://id.ripple.com\", update_html)","","","","\tvar currencies = [];","\tvar balances = getBalances(address);","\tfor (var cur in balances) {","\t\tcurrencies.push(cur);","\t}","\tcurrencies.sort(function(a,b){return (Math.abs(balances[b])-Math.abs(balances[a]))});","\t","\tvar trustLines = nodes[nodeMap[address]].trustLines;","\tif (!trustLines) {","\t\ttrustLines = [];","\t}","//basicincome.co","","$MongoDB.get_consumption_outside_network(address, update_table)","","function update_table(data){","\tconsole.log(data[0].total_amount)","\t\t$('#infoTable').text(\"\");","","\t$('#infoTable').append(","\t\t\t'<tr style=\"cursor:'+(trustLinesForCur.length ? 'pointer' : 'auto')+'\" sublistid=\"'+cur+","\t\t\t\t\t'\" numberofsubrows=\"'+trustLinesForCur.length+'\" '+'\">'+","\t\t\t\t'<td class=\"circlecell\"><svg width=\"22\" height=\"22\">'+","\t\t\t\t\t'<circle cx=\"11\" cy=\"11\" r=\"11\" style=\"fill:'+COLOR_TABLE[(COLOR_TABLE.hasOwnProperty(cur)?cur:'___')][0][1]+';\"></circle>'+","\t\t\t\t'</svg></td>'+","\t\t\t\t'<td class=\"light small mediumgray\">'+cur+'</td>'+","\t\t\t\t'<td class=\"bold amount\">'+data[0].total_amount+'</td>'+","\t\t\t'</tr>');","\t","}","\t","\t","","$MongoDB.get_tax_blob(address, update_table2)","\t","function update_table2(data){","\tconsole.log(data[0].total_amount)","\t\t$('#stuffTable').text(\"\");","","\t$('#stuffTable').append(","\t\t\t'<tr style=\"cursor:'+(trustLinesForCur.length ? 'pointer' : 'auto')+'\" sublistid=\"'+cur+","\t\t\t\t\t'\" numberofsubrows=\"'+trustLinesForCur.length+'\" '+'\">'+","\t\t\t\t'<td class=\"circlecell\"><svg width=\"22\" height=\"22\">'+","\t\t\t\t\t'<circle cx=\"11\" cy=\"11\" r=\"11\" style=\"fill:'+COLOR_TABLE[(COLOR_TABLE.hasOwnProperty(cur)?cur:'___')][0][1]+';\"></circle>'+","\t\t\t\t'</svg></td>'+","\t\t\t\t'<td class=\"light small mediumgray\">'+cur+'</td>'+","\t\t\t\t'<td class=\"bold amount\">'+data[0].total_amount+'</td>'+","\t\t\t'</tr>');","\t","}","","","","\t$('#balanceTable').text(\"\");","\t//$('#balanceTable').append(","\t\t//'<tr class=\"toprow\">'+","\t\t\t//'<td class=\"circlecell\"><svg width=\"22\" height=\"22\">'+","\t\t\t\t//'<circle cx=\"11\" cy=\"11\" r=\"11\" style=\"fill:'+COLOR_TABLE['XRP'][0][1]+';\"></circle>'+","\t\t\t//'</svg></td>'+","\t\t\t//'<td class=\"light small mediumgray\" style=\"width:35px;\">XRP</td>'+","\t\t\t//'<td class=\"bold amount\" id=\"xrpBalance\">'+commas(nodes[nodeMap[address]].account.Balance/1000000)+'</td>'+","\t\t\t//'<td class=\"light expander\">&nbsp;</td>'+","\t\t//'</tr>');","\t","\tfor (var i=0; i<currencies.length; i++) {","\t\tvar cur = currencies[i];","\t\tvar trustLinesForCur = [];","\t\tfor (var j=0; j<trustLines.length; j++) {","\t\t\tvar trustLine = trustLines[j];","\t\t\tif (trustLine.currency == cur) {","\t\t\t\ttrustLinesForCur.push(trustLine);","\t\t\t}","\t\t}","\t\ttrustLinesForCur.sort(function(a,b){return Math.abs(b.balance)-Math.abs(a.balance);});","\t\t$('#balanceTable').append(","\t\t\t'<tr style=\"cursor:'+(trustLinesForCur.length ? 'pointer' : 'auto')+'\" sublistid=\"'+cur+","\t\t\t\t\t'\" numberofsubrows=\"'+trustLinesForCur.length+'\" '+","\t\t\t\t\t'onclick=\"'+(trustLinesForCur.length ? 'toggleExpansion(this)' : '')+'\">'+","\t\t\t\t'<td class=\"circlecell\"><svg width=\"22\" height=\"22\">'+","\t\t\t\t\t'<circle cx=\"11\" cy=\"11\" r=\"11\" style=\"fill:'+COLOR_TABLE[(COLOR_TABLE.hasOwnProperty(cur)?cur:'___')][0][1]+';\"></circle>'+","\t\t\t\t'</svg></td>'+","\t\t\t\t'<td class=\"light small mediumgray\">'+cur+'</td>'+","\t\t\t\t'<td class=\"bold amount\">'+commas(balances[cur])+'</td>'+","\t\t\t\t'<td class=\"light expander\">'+(trustLinesForCur.length ? '<span id=\"'+cur+'Expander\">+</span></td>' : '&nbsp;')+","\t\t\t'</tr>');","\t\t\t","\t\tif (trustLinesForCur.length) {","\t\t\t$('#balanceTable').append(","\t\t\t\t'<tr class=\"innertablecontainer\" id=\"'+cur+'\">'+","\t\t\t\t'<td colspan=4>'+","\t\t\t\t'<div id=\"'+cur+'Inner\">'+","\t\t\t\t'<table class=\"innertable\" style=\"table-layout:fixed;\" id=\"'+cur+'InnerTable\">'+","\t\t\t\t'</table></div></td></tr>');","\t\t\t$('#'+cur+'InnerTable').append(","\t\t\t\t'<tr>'+","\t\t\t\t\t'<th class=\"light midsize mediumgray\" style=\"width:50%;\">Address</th>'+","\t\t\t\t\t//'<td class=\"light midsize mediumgray\" style=\"width:16%;\">Min</td>'+","\t\t\t\t\t'<td class=\"light midsize mediumgray center\" style=\"width:16%\">Dividend pathway</td>'+","\t\t\t\t\t//'<td class=\"light midsize mediumgray right\" style=\"width:16%;\">Max</td>'+","\t\t\t\t\t'<td class=\"light midsize mediumgray right\" style=\"width:16%;\">TaxRate</td>'+","","\t\t\t\t'</tr>');","\t\t\tfor (var j=0; j<trustLinesForCur.length; j++) {","\t\t\t\tvar tl = trustLinesForCur[j];","\t\t\t\t$('#'+cur+'InnerTable').append(","\t\t\t\t\t'<tr>'+","\t\t\t\t\t\t'<th class=\"light address\"><span style=\"cursor:pointer;overflow:hidden; text-overflow:ellipsis; display:block;\" '+","\t\t\t\t\t\t\t'onmouseover=\"lightenAddress(\\''+tl.account+'\\');\"'+","\t\t\t\t\t\t\t'onmouseout=\"darkenAddress(\\''+tl.account+'\\');\"'+","\t\t\t\t\t\t\t'onclick=\"expandNode(\\''+tl.account+'\\');\">'+","\t\t\t\t\t\t\ttl.account+'</span></th>'+","\t\t\t\t\t\t//'<td class=\"light '+(tl.limit_peer>0 ? 'negative ' : '')+'amount\"><span title=\"'+commas(-1*tl.limit_peer)+'\">'+roundNumber(-1*tl.limit_peer)+'</span></td>'+","\t\t\t\t\t\t'<td style=\"width:37px;\" class=\"bold '+(tl.balance<0 ? 'negative ' : '')+'amount center\"><span title=\"'+commas(tl.balance)+'\">'+roundNumber(tl.balance)+'</span></td>'+","\t\t\t\t\t\t//'<td style=\"width:37px;\" class=\"light '+(tl.limit<0 ? 'negative ' : '')+'amount right\"><span title=\"'+commas(tl.limit)+'\">'+roundNumber(tl.limit)+'</span></td>'+","\t\t\t\t\t\t'<td style=\"width:37px;\" class=\"light '+(tl.taxRate<0 ? 'negative ' : '')+'amount right\"><span title=\"'+commas(tl.taxRate)+'\">'+roundNumber(tl.taxRate)*100+\"%\"+'</span></td>'+","","\t\t\t\t\t'</tr>');","\t\t\t}\t\t","\t\t}","\t}","\tupdateTransactions(address);","}","","var txAltText = {","\t\"send\"       :\"Sent payment to...\",","\t\"receive\"    :\"Received payment from...\",","\t\"intermediate\":\"Intermediated payment of...\",","\t\"sendfailed\" :\"Failed to send payment to...\",","\t\"receivefailed\":\"Failed to receive payment from...\",","\t\"intermediatefailed\":\"Failed to intermediate payment of...\",","\t\"trustout\"   :\"Sent trust to...\",","\t\"trustinfailed\"    :\"Failed to receive trust from...\",","\t\"trustoutfailed\"   :\"Failed to send trust to...\",","\t\"trustin\"    :\"Received trust from...\",","\t\"offerout\"   :\"Made offer to give...\",","\t\"offerin\"    :\"Accepted offer and got...\",","\t\"offeroutfailed\"   :\"Failed to make offer to give...\",","\t\"offerinfailed\"    :\"Failed to accept offer and get...\",","\t\"canceloffer\":\"Canceled offer\",","  \"accountset\":\"Edited account properties\"","};","","function showTransactionWithHash(hash) {","\tchangingFocus = true;","\twindow.location.hash = hash;","\tchangeMode(\"transaction\",transactionMap[hash]);","}","var transactionMap = {};","\t","function updateTransactions(address, appending) {","\tif (!appending) {","\t\t$('#transactionTable').text(\"\");","\t}","\t$(\"#transactionThrobber\").remove();","\tif (nodes[nodeMap[address]].transactions) {","\t\tfor (var i=$('#transactionTable tr').length; i<nodes[nodeMap[address]].transactions.length; i++) {","\t\t\tvar tx = nodes[nodeMap[address]].transactions[i].tx;","\t\t\tvar meta = nodes[nodeMap[address]].transactions[i].meta;","\t\t\tvar transactionType;","\t\t\tvar counterparty = \"\";","\t\t\tvar amount = null;","\t\t\tvar currency = null;","\t\t\tvar aissuer = null;","\t\t\tvar secondAmount = null;","\t\t\tvar secondCurrency = null;","\t\t\tvar secondAissuer = null;","","\t\t\tif (tx.TransactionType == \"Payment\") {","\t\t\t\tamount = meta.DeliveredAmount || tx.Amount;","\t\t\t\tif (tx.Account == address) {","\t\t\t\t\ttransactionType = \"send\";","\t\t\t\t\tcounterparty = tx.Destination;","\t\t\t\t}","\t\t\t\telse if (tx.Destination == address) {","\t\t\t\t\ttransactionType = \"receive\";","\t\t\t\t\tcounterparty = tx.Account;","\t\t\t\t} else {","\t\t\t\t\ttransactionType = \"intermediate\";","\t\t\t\t}","\t\t\t} else if (tx.TransactionType == \"TrustSet\") {","\t\t\t\tamount = tx.LimitAmount;","\t\t\t\tif (tx.Account == address) {","\t\t\t\t\ttransactionType = \"trustout\";","\t\t\t\t\tcounterparty = tx.LimitAmount.issuer;","\t\t\t\t}","\t\t\t\telse if (tx.LimitAmount.issuer == address) {","\t\t\t\t\ttransactionType = \"trustin\";","\t\t\t\t\tcounterparty = tx.Account;","\t\t\t\t} else {","\t\t\t\t\tconsole.log(\"Could not interpret transaction TrustSet!\");","\t\t\t\t\tcontinue;","\t\t\t\t}","\t\t\t} else if (tx.TransactionType == \"OfferCreate\") {","\t\t\t\tif (tx.Account == address) {","\t\t\t\t\ttransactionType = \"offerout\";","\t\t\t\t\tamount = tx.TakerGets;","\t\t\t\t\tsecondAmount = tx.TakerPays;","\t\t\t\t} else {","\t\t\t\t\t//console.log(\"An offer was made, but not by you. We must now scour the meta-data to find out how exactly this transaction affected you.\");","\t\t\t\t\tvar affectedBalances = {};","\t\t\t\t\tfor (var j=0; j<meta.AffectedNodes.length; j++) {","\t\t\t\t\t\tvar mn = meta.AffectedNodes[j].ModifiedNode || meta.AffectedNodes[j].DeletedNode || meta.AffectedNodes[j].CreatedNode;","\t\t\t\t\t\tvar LatestFields = mn.FinalFields || mn.NewFields;","\t\t\t\t\t\tif (mn && LatestFields) {","\t\t\t\t\t\t\tif (LatestFields.Account == address || (LatestFields.HighLimit && LatestFields.HighLimit.issuer == address) ) {","\t\t\t\t\t\t\t\tvar let = mn.LedgerEntryType;","\t\t\t\t\t\t\t\tif (let == \"AccountRoot\") {","\t\t\t\t\t\t\t\t\tvar diff = LatestFields.Balance - (mn.PreviousFields ? mn.PreviousFields.Balance : 0);","\t\t\t\t\t\t\t\t\tif (affectedBalances[\"XRP\"]) {","\t\t\t\t\t\t\t\t\t\taffectedBalances[\"XRP\"]+=diff;","\t\t\t\t\t\t\t\t\t} else {","\t\t\t\t\t\t\t\t\t\taffectedBalances[\"XRP\"]=diff;","\t\t\t\t\t\t\t\t\t}","\t\t\t\t\t\t\t\t} else if (let == \"RippleState\") {","\t\t\t\t\t\t\t\t\t//console.log(\"Affected RippleState:\", mn);","\t\t\t\t\t\t\t\t\t//Not sure why this is reversed, but that's the way it is:","\t\t\t\t\t\t\t\t\tvar diff = 0-(LatestFields.Balance.value - (mn.PreviousFields ? mn.PreviousFields.Balance.value : 0));","\t\t\t\t\t\t\t\t\tvar cur = LatestFields.Balance.currency;","\t\t\t\t\t\t\t\t\tvar issuer = LatestFields.LowLimit.issuer;","\t\t\t\t\t\t\t\t\tvar cip = cur;//+\":\"+issuer; //Do we need this?","\t\t\t\t\t\t\t\t\t//console.log(\"Got/gave\", cip, \":\", diff);","\t\t\t\t\t\t\t\t\tif (affectedBalances[cip]) {","\t\t\t\t\t\t\t\t\t\taffectedBalances[cip]+=diff;","\t\t\t\t\t\t\t\t\t} else {","\t\t\t\t\t\t\t\t\t\taffectedBalances[cip]=diff;","\t\t\t\t\t\t\t\t\t}","\t\t\t\t\t\t\t\t} else {","\t\t\t\t\t\t\t\t\t//console.log(\"Affected my\", let,  mn);","\t\t\t\t\t\t\t\t}","","\t\t\t\t\t\t\t} else {","\t\t\t\t\t\t\t\t//console.log(\"Did not affect me?\", mn);","\t\t\t\t\t\t\t}","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\tvar affectedKeys = Object.keys(affectedBalances)","\t\t\t\t\tif (affectedKeys.length == 2) {","\t\t\t\t\t\tvar fip = affectedBalances[affectedKeys[0]] > 0;","\t\t\t\t\t\tvar posKey = fip > 0 ? 0 : 1;","\t\t\t\t\t\tvar negKey = fip > 0 ? 1 : 0;","\t\t\t\t\t\tvar positive = affectedBalances[affectedKeys[posKey]];","\t\t\t\t\t\tvar negative = affectedBalances[affectedKeys[negKey]];","\t\t\t\t\t\tif (positive * negative > 0) {","\t\t\t\t\t\t\tconsole.log(\"Could not interpret as offerin.\");","\t\t\t\t\t\t\tcontinue;\t","\t\t\t\t\t\t} else {","\t\t\t\t\t\t\ttransactionType = \"offerin\";","\t\t\t\t\t\t\tamount = affectedKeys[posKey]==\"XRP\" ? positive : {value: positive, currency: affectedKeys[posKey], issuer:issuer};","\t\t\t\t\t\t\tsecondAmount = affectedKeys[negKey]==\"XRP\" ? -negative : {value: -negative, currency: affectedKeys[negKey], issuer:issuer};","\t\t\t\t\t\t}","\t\t\t\t\t} else {","\t\t\t\t\t\tconsole.log(\"Could not interpret as offerin.\", affectedBalances);","\t\t\t\t\t\tcontinue;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t} else if (tx.TransactionType == \"OfferCancel\") {","\t\t\t\ttransactionType = \"canceloffer\";","\t\t\t} else if (tx.TransactionType == \"AccountSet\") {","        transactionType = \"accountset\";","      } else {console.log(\"Could not interpret transaction: \"+tx.transactionType);}","","\t\t\tif (amount) {","\t\t\t\tif (amount.currency) {","\t\t\t\t\tcurrency = amount.currency;","\t\t\t\t\taissuer = amount.issuer;","\t\t\t\t\tamount = amount.value;","\t\t\t\t} else {","\t\t\t\t\tcurrency = \"XRP\";","\t\t\t\t\tamount = amount/1000000;","\t\t\t\t}","\t\t\t}","\t\t\t","\t\t\tif (secondAmount) {","\t\t\t\tif (secondAmount.currency) {","\t\t\t\t\tsecondCurrency = secondAmount.currency;","\t\t\t\t\tsecondAissuer = secondAmount.issuer;","\t\t\t\t\tsecondAmount = secondAmount.value;","\t\t\t\t} else {","\t\t\t\t\tsecondCurrency = \"XRP\";","\t\t\t\t\tsecondAmount = secondAmount/1000000;","\t\t\t\t}","\t\t\t}","\t\t\t","\t\t\ttransactionMap[tx.hash] = tx;","\t\t\ttransactionMap[tx.hash].meta = meta;","\t\t\tvar success = meta.TransactionResult == \"tesSUCCESS\" ? \"\" : \"failed\";","\t\t\tvar result =  meta.TransactionResult == \"tesSUCCESS\" ? \"\" : \"[\"+meta.TransactionResult+\"] \";","","\t\t\t$('#transactionTable').append(","\t\t\t\t'<tr hash=\"'+tx.hash+'\">'+","\t\t\t\t\t'<td style=\"width:10%;\"><div '+(transactionType=='send'||transactionType=='receive'||transactionType=='intermediate'?'oncontextmenu=\"animateInPlaceWithHash(\\''+tx.hash+'\\');return false;\" onclick=\"showTransactionWithHash(\\''+tx.hash+'\\');\"':'style=\"cursor:default;\"')+' class=\"'+transactionType+success+' icon\" title=\"'+result+txAltText[transactionType+success]+'\">&nbsp;</div></td>'+","\t\t\t\t\t'<td style=\"width:90%\"'+(counterparty==\"\"?' colspan=\"1\"':'')+'><span style=\"float:left\"><span '+(aissuer&&!(transactionType=='trustin'||transactionType=='trustout')?'title=\"'+aissuer+'\"':'')+'>'+(amount?('<span class=\"bold amount small\" >'+commas(amount)+'</span> <span class=\"light small darkgray\" style=\"margin-right:5px\">'+currency+'</span></span>'+","\t\t\t\t\t(secondAmount?' <i class=\"light small darkgray\" style=\"margin-right:5px\">for</i> <span '+(secondAissuer&&!(transactionType=='trustin'||transactionType=='trustout')?'title=\"'+secondAissuer+'\"':'')+'><span class=\"bold amount small\">'+commas(secondAmount)+'</span> <span class=\"light small darkgray\" style=\"margin-right:5px\">'+secondCurrency+'</span></span>':'')):'')+","\t\t\t\t\tagoDate(tx.date)+'</span>'+","\t\t\t\t\t(counterparty!=\"\"?'<span style=\"display:block; margin-top:3px; overflow:hidden; text-overflow:ellipsis;\" class=\"light address right\"><span style=\"cursor:pointer;\" '+","\t\t\t\t\t\t\t'onmouseover=\"lightenAddress(\\''+counterparty+'\\');\"'+","\t\t\t\t\t\t\t'onmouseout=\"darkenAddress(\\''+counterparty+'\\');\"'+","\t\t\t\t\t\t\t'onclick=\"expandNode(\\''+counterparty+'\\');\">'+//\"HASH:\"+tx.hash+","\t\t\t\t\t\t\tcounterparty+'</span></span></td>' : '')+","\t\t\t\t\t//'<td class=\"marginalcell\"/>'+","\t\t\t\t'</tr>');","","\t\t}","\t\t","\t\tif (!nodes[nodeMap[address]].transactionsFinished) { //Are there more?","\t\t\t$('#transactionTable').append('<tr id=\"transactionThrobber\"><td colspan=3 style=\"text-align:center; padding:10px\"><img src=\"throbber4.gif\" width=30 height=30 /></td></tr>');","\t\t\t$('#transactionThrobber').bind('inview', function (event, visible) {","\t\t\t\tif (visible == true) {","\t\t\t\t\tgetNextTransactionPage();","\t\t\t\t}","\t\t\t});","\t\t} else {","\t\t\tconsole.log(\"Looks like we're finished?\", nodes[nodeMap[address]]);","\t\t}","","\t}","}","","","function animateInPlaceWithHash(hash) {","\tvar tx = transactionMap[hash];","\t//walk the paths to see if any nodes need to be added.","\twalkPaths(tx);","\tanimateTransaction(tx);","}","","","function agoDate(secondsSince2000) {","\tvar currentTime = new Date().getTime() / 1000 - UNIX_RIPPLE_TIME;","\tvar secondsAgo = currentTime-parseInt(secondsSince2000);","\tvar number;","\tvar unit;","\tif (secondsAgo < 1) {","\t\tnumber = 0;","\t\tunit = \"moment\";","\t} else if (secondsAgo < 60) {","\t\tnumber = Math.floor(secondsAgo);","\t\tunit = \"second\";","\t} else if (secondsAgo < 3600) {","\t\tnumber = Math.floor(secondsAgo/60);","\t\tunit = \"minute\";","\t} else if (secondsAgo < 86400) {","\t\tnumber = Math.floor(secondsAgo/3600);","\t\tunit = \"hour\";","\t} else if (secondsAgo < 604800) {","\t\tnumber = Math.floor(secondsAgo/86400);","\t\tunit = \"day\";","\t} else if (secondsAgo < 2629746) {","\t\tnumber = Math.floor(secondsAgo/604800);","\t\tunit = \"week\";","\t} else if (secondsAgo < 31556952) {","\t\tnumber = Math.floor(secondsAgo/2629746);","\t\tunit = \"month\";","\t} else {","\t\tnumber = Math.floor(secondsAgo/31556952);","\t\tunit = \"year\";","\t}","\tif (number != 1) {","\t\tunit += \"s\"","\t}","\tif (number == 0) {","\t\tnumber = \"\";","\t}","\t","\tvar d = new Date(0);","\td.setUTCSeconds(secondsSince2000+UNIX_RIPPLE_TIME);","\treturn '<span style=\"margin-right:5px\" class=\"light small mediumgray date\" title=\"'+d.toUTCString()+'\">'+number+\" \"+unit+' ago</span>';","}","","function absoluteDateOnly(secondsSince2000) {","\tvar d = new Date(0);","\td.setUTCSeconds(secondsSince2000+UNIX_RIPPLE_TIME);","\treturn d.getUTCDate()+' '+['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'][d.getUTCMonth()]+' '+d.getUTCFullYear()","}","","function absoluteTimeOnly(secondsSince2000) {","\tvar d = new Date(0);","\td.setUTCSeconds(secondsSince2000+UNIX_RIPPLE_TIME);","\treturn d.getUTCHours()+':'+(d.getUTCMinutes()<10 ? '0'+d.getUTCMinutes() : d.getUTCMinutes())+':'+(d.getUTCSeconds()<10 ? '0'+d.getUTCSeconds() : d.getUTCSeconds());","}","","","","function absoluteDate(secondsSince2000) {","\tvar d = new Date(0);","\td.setUTCSeconds(secondsSince2000+UNIX_RIPPLE_TIME);","\treturn '<span class=\"light small mediumgray date\" title=\"'+absoluteTimeOnly(secondsSince2000)+'\">'+absoluteDateOnly(secondsSince2000)+'</span>';","}","function absoluteTime(secondsSince2000) {","\tvar d = new Date(0);","\td.setUTCSeconds(secondsSince2000+UNIX_RIPPLE_TIME);","\treturn '<span class=\"light small mediumgray date\" title=\"'+absoluteDateOnly(secondsSince2000)+'\">'+absoluteTimeOnly(secondsSince2000)+'</span>';","}","","","","","function getBalances(address) {","\tvar balances = {};","\tif (nodes[nodeMap[address]].trustLines) {","\t\tfor (var i=0; i<nodes[nodeMap[address]].trustLines.length; i++) {","\t\t\tvar trustLine = nodes[nodeMap[address]].trustLines[i];","\t\t\tif (balances[trustLine.currency]) {","\t\t\t\tbalances[trustLine.currency] += parseFloat(trustLine.balance);","\t\t\t} else {","\t\t\t\tbalances[trustLine.currency] = parseFloat(trustLine.balance);","\t\t\t}","\t\t}","\t}","\treturn balances;","}","","function linkOrNot(d) {","\tif(currentCurrency==\"XRP\" || currentCurrency==d.currency) {","\t\tvar o = 5*Math.pow(Math.log(1+d.value),0.3333);;","\t\treturn o;","\t} ","\telse{return 0;}","}","","function isLinkVisible(d) {","\treturn currentCurrency==\"XRP\" || currentCurrency==d.currency","}","","function changeCurrency(newCurrency) {","\tvar isOther = (newCurrency == '___');","\tif (isOther && $('#otherCurrency').css('font-style')!='italic') {","\t\tnewCurrency = $('#otherCurrency').attr('value');","\t}","\tif (newCurrency == \"___\") {","\t\t$(\"#otherCurrency\").css(\"display\",\"block\");","\t} else {","\t\tif (isOther) {","\t\t\t$(\"#otherCurrency\").css(\"display\",\"block\");","\t\t} else {","\t\t\t$(\"#otherCurrency\").css(\"display\",\"none\");","\t\t}","\t\tcurrentCurrency = newCurrency;","\t\tdegreeMap = {};","\t\tdegreeMap[focalNode] = 0;","\t\treassignColors(focalNode);","\t\tcolorRogueNodes();","\t\tupdated = svg.select(\"g#nodeGroup\").selectAll(\"circle.node\");","\t\tupdated.attr(\"r\", nodeRadius );","\t\tsvg.select(\"g#haloGroup\").selectAll(\"circle.halo\").attr(\"r\", function(d){return HALO_MARGIN+nodeRadius(d);} );","\t\tsvg.select(\"g#linkGroup\").selectAll(\"line.static\").attr(\"stroke-width\", linkOrNot);","\t\tforce.start();","\t}","}","","function toggleExpansion(row) {","\tvar cur = row.getAttribute(\"sublistid\");","\tvar numberOfSubrows = parseInt(row.getAttribute(\"numberofsubrows\"));","\tvar expander = document.getElementById(cur+\"Expander\");","\tif (expander.innerHTML == \"+\") {","\t\t$('#'+cur+'Inner').animate({height:(11+(numberOfSubrows+1)*25.5)+'px'});","\t\t\t\t$('#'+cur).show()","\t\texpander.innerHTML = \"&ndash;\";","\t} else {","\t\t$('#'+cur+'Inner').animate({height:'0px'}, {complete: function(){$('#'+cur).hide();} });","\t\texpander.innerHTML = \"+\";","\t}","}","","","function focusOtherCurrency(that) {","\tif ($(that).css('font-style')=='italic') {","\t\t$(that).css('font-style','inherit').css('color','inherit').attr('value','');","\t}","}","","function blurOtherCurrency(that) {","\tif ($(that).attr('value')=='' || $(that).css('font-style')=='italic') { ","\t\t$(that).css('font-style','italic').css('color','#999').attr('value','other');","\t} else {","\t\tvar upper=$(that).attr('value').toUpperCase();","\t\t$(that).attr('value',upper);","\t\tchangeCurrency('___');","\t}","}","","window.onhashchange = function(){","\tif (!changingFocus) {","\t\tif (window.location.hash == \"\" || window.location.hash == \"#\") {","\t\t\trefocus(REFERENCE_NODE, true);","\t\t} else if (window.location.hash.charAt(1) == \"r\") {","\t\t\tif (nodeMap[window.location.hash.substring(1)]) {","\t\t\t\texpandNode(window.location.hash.substring(1));","\t\t\t}","\t\t} else if (\"0123456789ABCDEF\".indexOf(window.location.hash.charAt(1)) != -1) {","\t\t\tshowTransactionWithHash(window.location.hash.substring(1));","\t\t}","    ","\t} else {","\t}","\tchangingFocus = false;","};","","","\t$(function () {$('.scroll-pane').jScrollPane({autoReinitialise: true, hideFocus: true});});","\t$(function () {$(\"#currency\").selectbox();});","\t$(\"#focus\").keyup(function(event){","\t\tif(event.keyCode == 13){","\t\t\t$(\"#searchButton\").click();","\t\t}","\t});","\t$(\"#otherCurrency\").keyup(function(event){","\t\tif(event.keyCode == 13){","\t\t\t$(this).blur();","\t\t}","\t});","\tupdateInformation(focalNode);","\t","  });"]}]}]]},"ace":{"folds":[],"scrolltop":25786.778202056885,"scrollleft":0,"selection":{"start":{"row":2001,"column":5},"end":{"row":2001,"column":5},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":1784,"state":"start","mode":"ace/mode/text"}},"timestamp":1419780162301,"hash":"91167d5ecc9181fcc194541d26c2f4b786197ec4"}